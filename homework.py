#Ваша задача состоит в том, чтобы разбить плитку шоколада заданного размера n x m на маленькие квадраты. 
#Каждый квадрат имеет размер 1x1 и не ломается. Реализуйте функцию, которая будет возвращать минимальное количество необходимых разрывов.
#Например, если вам дали плитку шоколада размера 2x1, вы можете разделить ее на отдельные квадраты всего за один раз, 
#но для размера 3x1вы должны сделать два разрыва.
#Если входные данные недействительны, вы должны вернуть 0 (так как разрывы не нужны, если у нас нет шоколада для разделения). 
#Ввод всегда будет неотрицательным целым числом.
def break_chocolate(n, m):
    if n == 0 and m == 0:
        return 0
    else:
        a = n*m-1
        return a
    



#Добро пожаловать. В этой ката вас просят возвести в квадрат каждую цифру числа и соединить их.
#Например, если мы пропустим через функцию 9119, получится 811181, потому что 9^2 равно 81, а 1^2 равно 1. (81-1-1-81)
#Функция принимает целое число и возвращает целое число.
def square_digits(num):
    a = []
    for i in str(num):
        i = int(i)
        a.append(i*i)
    a = ("".join(map(str,a)))
    a = int(a)
    return a


'''# Основная идея состоит в том, чтобы подсчитать все встречающиеся символы в строке. 
# Если у вас есть строка типа aba, результат должен быть {'a': 2, 'b': 1}.'''
def count(s):
    a = {}
    for i in s:
        if i in a.keys():
            a[i] +=1
        else:
            a[i] = 1
    return a






#Учитывая массив целых чисел, удалите наименьшее значение. Не изменяйте исходный массив/список. 
#Если есть несколько элементов с одинаковым значением, удалите элемент с более низким индексом. 
#Если вы получили пустой массив/список, верните пустой массив/список.
#Не меняйте порядок оставшихся элементов.

def remove_smallest(numbers):
    if len(numbers) <= 1: return []
    numbers.remove(min(numbers))
    return numbers





#У мистера Скруджа есть сумма денег «P», которую он хочет инвестировать.
#Прежде чем он это сделает, он хочет знать, сколько лет «Y» эта сумма «P» должна храниться в банке, чтобы она составила желаемую сумму денег «D».
#Сумма хранится в течение Y лет в банке, где проценты I выплачиваются ежегодно. 
#После уплаты налогов «Т» за год новая сумма реинвестируется.
#Примечание к налогам: налогом облагается не инвестированная основная сумма, а только начисленные проценты за год.

def calculate_years(p, i, t, d):
    if p>=d:
        return 0
    a = 0
    years = 0
    while True:
        p += (p*i) - (p*i*t)
        a = p // d
        years +=1
        if a>0:
            return years
        
#Напишите программу, которая вычисляет количество нулей в конце факториала заданного числа.
#N! = 1 * 2 * 3 *  ... * N
#Будьте осторожны, 1000!у него 2568 цифр...
def zeros(n):
    if n>5:
        return n//5+zeros(n//5)
    else:  
        return 0
    

#Завершите функцию scramble(str1, str2), которая возвращает, true если часть
#str1 символов можно переставить, чтобы они соответствовали str2, иначе возвращает false


def scramble(s1, s2):
    # your code here
    text = ""
    for i in s2:
        if (i in s1) and i.islower():
            s1 = s1.replace(i,"",1)
            text += i
        else:
            continue
    if text == s2:
        return True
    else:
        return False
    


#Напишите алгоритм, который берет массив и перемещает все нули в конец, сохраняя порядок остальных элементов.

def move_zeros(lst:list):
    for i in lst:
        if i==0  in lst:
            lst.remove(i)
            lst.append(i)
    return lst